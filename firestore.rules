rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth.uid == 'Twt0A27bx9YcG4vu3RTsR7ifJzf2';
    }

    function isAuthorized(userId) {
      return request.auth != null && (userId == request.auth.uid || isAdmin());
    }

    function isValidText(text) {
      return text is string || text == null;
    }

    function isValidImages(images) {
      return (images is list && images.size() <= 4) || images == null;
    }

    function isValidViewingActivity(activity) {
      return activity == null || (
        activity.title is string &&
        activity.tmdbId is string &&
        activity.mediaType in ['movie', 'tv'] &&
        activity.poster_path is string
      );
    }
    
    match /tweets/{tweetId} {
      allow read: if true;  // Allow public reading for trending functionality
      allow update: if request.auth != null && (
        isAuthorized(resource.data.createdBy) || 
        // Allow updating totalWatchers field
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['totalWatchers', 'viewingActivity']))
      );
      allow create: if request.auth != null &&
                     isAuthorized(request.resource.data.createdBy) &&
                     isValidText(request.resource.data.text) &&
                     isValidImages(request.resource.data.images) &&
                     isValidViewingActivity(request.resource.data.viewingActivity);
      allow delete: if isAuthorized(resource.data.createdBy);
    }

    match /users/{document=**} {
      allow read, write: if request.auth != null;
    }

    // Watchlists rules
    match /watchlists/{watchlistId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                            resource.data.userId == request.auth.uid;
    }

    // Bookmarks rules
    match /bookmarks/{bookmarkId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                            resource.data.userId == request.auth.uid;
    }
  }
}
